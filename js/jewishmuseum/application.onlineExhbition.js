// Generated by CoffeeScript 1.3.3
(function() {
  var initMasonry, initSearch;

  initMasonry = function() {
    var settings, wrap;
    settings = {
      columnWidth: 50,
      itemSelector: '.visible',
      isAnimated: true
    };
    wrap = $('> ul', '#setItemsGrid');
    wrap.find('img').filter('[data-ratio]').each(function() {
      var t, w;
      t = $(this);
      w = t.width();
      return t.css({
        width: w,
        height: w / parseFloat(t.data('ratio'))
      });
    });
    return wrap.masonry(settings);
  };

  initSearch = function() {
    var count, countWrap, items, s, wrap;
    s = $('.submit', '#online-exhibition-search');
    if (s.length !== 1) {
      return;
    }
    wrap = $('ul', '#setItemsGrid');
    items = wrap.children('.setItem');
    countWrap = $('.results-count', '#online-exhibition-search');
    count = countWrap.children('.count');
    return setTimeout(function() {
      var hs, i;
      hs = wrap.find('.h2, .textContent');
      i = s.siblings('input');
      s.on('click', function() {
        var show, v;
        if (wrap.hasClass('working')) {
          return false;
        }
        v = i.val().toLowerCase();
        wrap.addClass('working');
        if (v === '') {
          show = items;
          countWrap.removeClass('in');
        } else {
          show = hs.filter(function() {
            return $(this).text().toLowerCase().indexOf(v) >= 0;
          });
          show = show.parents('.setItem');
          count.text(show.length);
          countWrap.addClass('in');
        }
        items.not(show).removeClass('visible');
        show.addClass('visible');
        wrap.masonry('reload');
        wrap.removeClass('working');
        return $(window).trigger('resize');
      });
      return i.on('keyup', function(e) {
        if (e.keyCode === 27) {
          i.val('');
          s.trigger('click');
        }
        if (e.keyCode === 13) {
          return s.trigger('click');
        }
      });
    }, 400);
  };

  $(function() {
    initMasonry();
    return initSearch();
  });

}).call(this);
