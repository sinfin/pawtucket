#
# Browse configuration
#

# number of seconds to keep cached browses around
# set to 0 to disable caching
cache_timeout = 0

# Configuration for object browse
ca_objects = {
	name = _(Objects),
	facets = {
		programs_facet = {
			type = authority,
			table = ca_occurrences,
#			generate_facets_for_types = 0,
			relationship_table = ca_objects_x_occurrences,
			#restrict_to_types = [programs],
			
			show_all_when_first_facet = 0,
			order_by_label_fields = [name_sort],
			
			#groupings = {
			#	label = _(Name), 
			#	ca_attribute_competition_date:competition_date = _(Years)
			#},
			
			group_mode = alphabetical,
			
			label_singular = _(program),
			label_plural = _(programs)
		},
		decade_facet = {
			type = normalizedDates,
			element_code = creation_date,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _(decade),
			label_plural = _(decades)
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			order_by_label_fields = [name_plural],
			
			group_mode = alphabetical,
			
			label_singular = _(subject term),
			label_plural = _(subject terms)
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [affiliation],
			
			#groupings = {
			#	label = _(Name), 
			#	relationship_types = _(Role),
			#	type = _(Type),
			#	ca_attribute_institution:institution = _(Affiliation)
			#},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = a,
			label_singular = _(creator affiliation),
			label_plural = _(creator affiliations)
		},
#		competitions_facet = {
#			type = authority,
#			table = ca_occurrences,
#			generate_facets_for_types = 0,
#			relationship_table = ca_objects_x_occurrences,
#			restrict_to_types = [competitions,competition_series],
#			order_by_label_fields = [name_sort],
			
#			show_all_when_first_facet = 0,
			
			#groupings = {
			#	label = _(Name), 
			#	ca_attribute_competition_date:competition_date = _(Years)
			#},
			
#			group_mode = alphabetical,
			
#			label_singular = _(competition/series),
#			label_plural = _(competitions/series)
#		},
#		type_facet = {
#			type = fieldList,
#			field = type_id,
			
#			group_mode = none,

#			label_singular = _(document type),
#			label_plural = _(document types)
#		}
	}
}

# Configuration for object lot browse
ca_object_lots = {
	name = _(Lots),
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_object_lots_x_entities,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _(entity),
			label_plural = _(entities)
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_object_lots_x_places,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(place),
			label_plural = _(places)
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_object_lots_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(collection),
			label_plural = _(collections)
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_object_lots_x_occurrences,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _(occurrence),
			label_plural = _(occurrences)
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_object_lots_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(term),
			label_plural = _(terms)
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _(type),
			label_plural = _(types)
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _(status),
			label_plural = _(statuses)
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _(access status),
			label_plural = _(access statuses)
		}
	}
}
# --------------------------------------------------------------------
# Configuration for entity browse
ca_entities = {
	name = _(Entities),
	facets = {
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_entities_x_places,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(place),
			label_plural = _(places)
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _(occurrence),
			label_plural = _(occurrences)
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(collection),
			label_plural = _(collections)
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_entities_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(term),
			label_plural = _(terms)
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _(type),
			label_plural = _(types)
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _(status),
			label_plural = _(statuses)
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _(access status),
			label_plural = _(access statuses)
		}
	}
}
# --------------------------------------------------------------------
# Configuration for collection browse
ca_collections = {
	name = _(Collections),
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _(entity),
			label_plural = _(entities)
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_places_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(place),
			label_plural = _(places)
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_occurrences_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _(occurrence),
			label_plural = _(occurrences)
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(term),
			label_plural = _(terms)
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _(type),
			label_plural = _(types)
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _(status),
			label_plural = _(statuses)
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _(access status),
			label_plural = _(access statuses)
		}
	}
}

# --------------------------------------------------------------------
# Configuration for place browse
ca_places = {
	name = _(Places),
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_places,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _(entity),
			label_plural = _(entities)
		},
		object_facet = {
			type = authority,
			table = ca_objects,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(object),
			label_plural = _(objects)
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_places_x_occurrences,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _(occurrence),
			label_plural = _(occurrences)
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_places_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(term),
			label_plural = _(terms)
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _(type),
			label_plural = _(types)
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _(status),
			label_plural = _(statuses)
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _(access status),
			label_plural = _(access statuses)
		}
	}
}
# --------------------------------------------------------------------
# Configuration for occurrence browse
ca_occurrences = {
	name = _(Other authorities),
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _(entity),
			label_plural = _(entities)
		},
		object_facet = {
			type = authority,
			table = ca_objects,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(object),
			label_plural = _(objects)
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_occurrences_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(term),
			label_plural = _(terms)
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _(type),
			label_plural = _(types)
		},
		year_facet = {
			type = normalizedDates,
			element_code = dates,
			normalization = years,
			
			group_mode = alphabetical,
			
			label_singular = _(year),
			label_plural = _(years)
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _(status),
			label_plural = _(statuses)
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _(access status),
			label_plural = _(access statuses)
		}
	}
}

# --------------------------------------------------------------------
# Configuration for storage location browse
ca_storage_locations = {
	name = _(Storage locations),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _(type),
			label_plural = _(types)
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _(status),
			label_plural = _(statuses)
		}
	}
}
# --------------------------------------------------------------------
