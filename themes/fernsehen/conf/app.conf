# -------------------
# Registered user features
# -------------------
dont_allow_registration_and_login = 0

# -------------------
# set variables
# -------------------
# featured items set code - on home page and favorites page
featured_set_name = siteFeatured

# Type of set to create for user-generated image sets
user_set_type = user

# Type of set to display in the "gallery" section
simpleGallery_set_type = exhibition


# -------------------
# Search options
# -------------------

# Perform secondary searches when search objects?
# (Secondary searches are searches performed when searching for objects 
#  [the "primary" search] on authorities)
#
do_secondary_searches = 0

# settings for specific secondary searches
do_secondary_search_for_ca_entities = 0
do_secondary_search_for_ca_places = 0
do_secondary_search_for_ca_occurrences = 0
do_secondary_search_for_ca_collections = 0

# Number of items per page of results
items_per_page_options_for_ca_objects_search = [4]
items_per_secondary_search_page = 8

# If set to true, search results are partitioned by type
# Requires that your theme supports this (default theme *does not*)
search_results_partition_by_type = 0

# Force use of per-session storage even if user is logged in.
# If you want search histories and results to persist across sessions for logged in users
# then set this to zero. For most front-ends you should leave this on (aka. set to 1)
always_use_session_based_storage_for_find_result_contexts = 1

# Set to true to enable the advanced search form feature (forms are configured in advanced_search_forms.conf)
use_advanced_search = 0

# --- result views
result_views_for_ca_objects = {full = _(List)}
result_views_for_ca_entities = {full = _(List)}
result_views_for_ca_places = {full = _(List)}
result_views_for_ca_occurrences = {full = _(List)}
result_views_for_ca_collections = {full = _(List)}

# --- sort options
result_sort_options_for_ca_objects = {ca_object_labels.name => _(Title)}
result_sort_options_for_ca_entities = {ca_entity_labels.displayname => _(Name), ca_entities.type_id => _(Type), ca_entities.idno_sort => _(Idno)}
result_sort_options_for_ca_places = {ca_place_labels.name => _(Name), ca_places.type_id => _(Type), ca_places.idno_sort => _(Idno)}
result_sort_options_for_ca_occurrences = {ca_occurrence_labels.name => _(Name), ca_occurrences.idno_sort => _(Idno)}
result_sort_options_for_ca_collections = {ca_collection_labels.name => _(Name), ca_collections.type_id => _(Type), ca_collections.idno_sort => _(Idno)}

# -------------------
# Browsing options
# -------------------

# Table names (eg. "ca_objects", "ca_places") to allow browsing on
browse_targets = [ca_objects]

# Number of items per page of results
items_per_page_options_for_ca_objects_browse = [4]

# Number of objects per page on detail pages for entities, places, collections, occurrences
objects_per_page_for_detail_pages = 12;

# -------------------
# Item viewablity (access enforcement)
# -------------------

# if set, no access checks are performed
dont_enforce_access_settings = 0

# list of values for 'access' field in objects, entities, places, etc. that allow public (unrestricted) viewing
public_access_settings = [1]

# list of values for 'access' field in objects, entities, places, etc. that allow privileged viewing 
# (ie. user in on a privileged network as defined below)
privileged_access_settings = [1,2]

# List of IP address to consider "privileged" (can see items where access = 1 or 2)
# It is ok to use wildcards ("*") for portions of the address to create class C or B addresses
# Eg. 192.168.1.5, 192.168.1.* and 192.168.*.* are all valid and increasingly broad
privileged_networks = [192.168.6.*]

# -------------------
# Quicksearch ("live" search in search box in header)
# -------------------

# what sorts of results does Quicksearch return?
quicksearch_return_ca_objects = 0
quicksearch_return_ca_entities = 0
quicksearch_return_ca_places = 0
quicksearch_return_ca_occurrences = 0
quicksearch_return_ca_collections = 0

# -------------------
# Detail views
# -------------------

# Show details? - objects always have detail pages
#
allow_detail_for_ca_entities = 0
allow_detail_for_ca_places = 0
allow_detail_for_ca_occurrences = 0
allow_detail_for_ca_collections = 0

# --- attributes to display on detail pages
ca_objects_detail_display_attributes = [dimensions_text, copyright_date, creation_date]
ca_objects_description_attribute = description
ca_entities_detail_display_attributes = [email]
ca_entities_description_attribute = biography
ca_places_detail_display_attributes = []
ca_places_description_attribute = location_description
ca_occurrences_detail_display_attributes = []
ca_occurrences_description_attribute = description
ca_collections_detail_display_attributes = [institution]
ca_collections_description_attribute = description

# --- attribute of coordinates to map on object detail page and search results - if not set, no map is displayed - must be table.attribute
ca_objects_map_attribute = ca_places.georeference
show_map_object_search_results = 0

# Allow browse from within detail views? 
# Set to the name of the type of browse to perform, or 0 to disable
# You can also optionally set a sort order using any field or metadata element in the browsed table; you can sort on titles by using the label table name + label field (eg. ca_object_labels.name)
#
allow_browse_within_detail_for_ca_entities = ca_objects
sort_browse_within_detail_for_ca_entities = ca_objects.idno

allow_browse_within_detail_for_ca_places = ca_objects
sort_browse_within_detail_for_ca_places = ca_objects.idno

allow_browse_within_detail_for_ca_occurrences = ca_objects
sort_browse_within_detail_for_ca_occurrences = ca_objects.idno

allow_browse_within_detail_for_ca_collections = ca_objects
sort_browse_within_detail_for_ca_collections = ca_objects.idno

allow_browse_within_detail_for_ca_objects = 0


# Redirect to detail on first browse?
#
redirect_to_ca_objects_detail_if_is_first_facet = 0
redirect_to_ca_entities_detail_if_is_first_facet = 0
redirect_to_ca_places_detail_if_is_first_facet = 0
redirect_to_ca_occurrences_detail_if_is_first_facet = 0
redirect_to_ca_collections_detail_if_is_first_facet = 0

# show add this social media sharing button on object detail page
show_add_this = 0

# -------------------
# UI locales
# -------------------
#
# Define locales/languages here that you want the Pawtucket UI to support
# Each locale *MUST* have a messages.po/mo translation file in app/locales
ui_locales = [de_DE]

# -------------------
# New Museum specific setting to display see also's on detail pages
# -------------------
dont_show_see_also = 0
